===== About =====

The Divinity Engine is an ongoing experiment into the world of open game development. The paradigm revolves around you,
the player. It’s your game, so you can do what you want with it. Want to just try it out and play for awhile? Feel free.
Want to dig in and add your own content? Go ahead. No more of this “you buy it, but we control it” mentality. And I’m not
just talking about little things like the game world, either. Sure, you can add a powerful new sword, but you can also
crunch out a new piece of core functionality. Add special effects, change the game interface, even modify the nitty
gritty details of the game mechanics themselves. Maybe you’d like to turn it into more of a first-person game, rather
than the default top-down third-person view. Well, with Divinity, there are no limits, so go for it!

Official web site: http://www.divinityengine.com
Source code: http://github.com/sinisterchipmunk/divinity


===== Testing =====

To build the documentation, use:
  rake doc

To run all tests, use:
  rake test:all


===== Usage =====

Because this is what you're here for, isn't it? Here's the quickest way to instantiate and start using the engine:

  require 'divinity_engine'

  engine = DivinityEngine.new(:width => 800, :height => 600, :fullscreen => true)

  engine.during_render do
    # do some OpenGL rendering
  end

  engine.during_update do |delta|
    # update some stuff, like 3D models, etc. Delta is the time differential between last update and this update,
    # in milliseconds.
  end

  engine.go! # start the engine

See the web site at http://www.divinityengine.com for more examples, or read through this documentation. You can also
check out the source file in the DivinityEngine root directory called "template.rb," which demonstrates all of this with
a small demo application. (It also demonstrates making use of the Camera.)

Note that you can call things like DivinityEngine#during_render and DivinityEngine#during_update multiple times, and
each block you pass it will be called in the order it was given. Other callbacks include:

* DivinityEngine#before_init
* DivinityEngine#during_init
* DivinityEngine#after_init
* DivinityEngine#before_update
* DivinityEngine#during_update
* DivinityEngine#after_update
* DivinityEngine#before_render
* DivinityEngine#during_render
* DivinityEngine#after_render
* DivinityEngine#before_shutdown
* DivinityEngine#during_shutdown
* DivinityEngine#after_shutdown.
